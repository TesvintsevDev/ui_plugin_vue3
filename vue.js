const App = {
  data() {
    return {
      activeIndex: 0, // то, что позволяет определить текущий активный шаг
      isActive: true,
      steps: [
        {
          title: 'Основы',
          text: 'В этом блоке нужно познакомиться со всеми основами Vue.js на практике. На протяжении блока написать реактивное приложение, в процессе разработки которого разобрать всю базу фреймворка.',
        },
        {
          title: 'Компоненты',
          text: 'Один из самых важных блоков, где нужно будет узнать все о компонентах. В блоке написать 2 разных приложения и создать более 5 различных UI компонентов, как в реальной разработке. Блок расскажет про абсолютно все составляющие, которые есть в компонентах: взаимодействие, slots, асинхронные и динамические компоненты и тонна примеров.',
        },
        {
          title: 'Роутер',
          text: 'В данном блоке здача узнать все о том, как работает мультиязычность во Vue. Создать миниклон Gmail, где на практике можно увидеть, как работать с динамическим роутером.',
        },
        {
          title: 'Vuex',
          text: 'В блоке нужно узнать абсолютно все про Vuex. Узнать как работать с данными, какие есть лучшие практики по их программированию и структурированию. Все на практике.',
        },
        {
          title: 'Composition',
          text: 'Одним из наиболее важных обновлений в Vue 3 является появление альтернативного синтаксиса Composition API. В этом блоке нужно узнаеть все самое необходимое, чтобы полностью пользоваться данными синтаксисом на практических примерах. Помимо этого узнать, как работать совместно с Vue Router и Vuex.',
        },
      ],
    };
  },
  methods: {
    prev() {
      // когда нажимаем кнопку назад
      if (this.activeIndex !== 0) {
        this.activeIndex--;
      }
    },
    reset() {
      // начать заново
      this.activeIndex = 0;
      this.isActive = true;
    },
    nextOfFinish() {
      // кнопка вперед или закончить
      if (this.activeIndex !== this.steps.length - 1) {
        this.activeIndex++;
      } else {
        this.isActive = false;
      }
    },
    setActive(idx) {
      // когда нажимаем на определенный шаг
      this.activeIndex = idx;
    },
  },
  computed: {
    // тут стоит определить несколько свойств:
    // 1. текущий выбранный шаг
    activeStep() {
      return this.steps[this.activeIndex];
    },
    // 2. выключена ли кнопка назад
    prevDisabled() {
      return this.activeIndex === 0;
    },
    // 3. находимся ли мы на последнем шаге
    isLastStep() {
      return this.activeIndex === this.steps.length - 1;
    },
  },
};

Vue.createApp(App).mount('#app');
